// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tafs.proto

#ifndef PROTOBUF_tafs_2eproto__INCLUDED
#define PROTOBUF_tafs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tafs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tafs_2eproto();
void protobuf_AssignDesc_tafs_2eproto();
void protobuf_ShutdownFile_tafs_2eproto();

class AccessReply;
class AccessReq;
class FlushReply;
class FlushReq;
class GetAttrReply;
class GetAttrReq;
class HelloReply;
class HelloRequest;
class MkDirReply;
class MkDirReq;
class MknodReply;
class MknodReq;
class OpenReply;
class OpenReq;
class ReadDirReply;
class ReadDirReq;
class ReadReply;
class ReadReq;
class ReadSReply;
class ReadSReq;
class RenameReply;
class RenameReq;
class RmDirReply;
class RmDirReq;
class TruncateReply;
class TruncateReq;
class UnlinkReply;
class UnlinkReq;
class WriteReply;
class WriteReq;
class WriteSReply;
class WriteSReq;

// ===================================================================

class RenameReq : public ::google::protobuf::Message {
 public:
  RenameReq();
  virtual ~RenameReq();

  RenameReq(const RenameReq& from);

  inline RenameReq& operator=(const RenameReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameReq& default_instance();

  void Swap(RenameReq* other);

  // implements Message ----------------------------------------------

  inline RenameReq* New() const { return New(NULL); }

  RenameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameReq& from);
  void MergeFrom(const RenameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string oldpath = 1;
  void clear_oldpath();
  static const int kOldpathFieldNumber = 1;
  const ::std::string& oldpath() const;
  void set_oldpath(const ::std::string& value);
  void set_oldpath(const char* value);
  void set_oldpath(const char* value, size_t size);
  ::std::string* mutable_oldpath();
  ::std::string* release_oldpath();
  void set_allocated_oldpath(::std::string* oldpath);

  // optional string newpath = 2;
  void clear_newpath();
  static const int kNewpathFieldNumber = 2;
  const ::std::string& newpath() const;
  void set_newpath(const ::std::string& value);
  void set_newpath(const char* value);
  void set_newpath(const char* value, size_t size);
  ::std::string* mutable_newpath();
  ::std::string* release_newpath();
  void set_allocated_newpath(::std::string* newpath);

  // @@protoc_insertion_point(class_scope:tafs.RenameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr oldpath_;
  ::google::protobuf::internal::ArenaStringPtr newpath_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static RenameReq* default_instance_;
};
// -------------------------------------------------------------------

class RenameReply : public ::google::protobuf::Message {
 public:
  RenameReply();
  virtual ~RenameReply();

  RenameReply(const RenameReply& from);

  inline RenameReply& operator=(const RenameReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameReply& default_instance();

  void Swap(RenameReply* other);

  // implements Message ----------------------------------------------

  inline RenameReply* New() const { return New(NULL); }

  RenameReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameReply& from);
  void MergeFrom(const RenameReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.RenameReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static RenameReply* default_instance_;
};
// -------------------------------------------------------------------

class TruncateReq : public ::google::protobuf::Message {
 public:
  TruncateReq();
  virtual ~TruncateReq();

  TruncateReq(const TruncateReq& from);

  inline TruncateReq& operator=(const TruncateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruncateReq& default_instance();

  void Swap(TruncateReq* other);

  // implements Message ----------------------------------------------

  inline TruncateReq* New() const { return New(NULL); }

  TruncateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruncateReq& from);
  void MergeFrom(const TruncateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TruncateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.TruncateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static TruncateReq* default_instance_;
};
// -------------------------------------------------------------------

class TruncateReply : public ::google::protobuf::Message {
 public:
  TruncateReply();
  virtual ~TruncateReply();

  TruncateReply(const TruncateReply& from);

  inline TruncateReply& operator=(const TruncateReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruncateReply& default_instance();

  void Swap(TruncateReply* other);

  // implements Message ----------------------------------------------

  inline TruncateReply* New() const { return New(NULL); }

  TruncateReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruncateReply& from);
  void MergeFrom(const TruncateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TruncateReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.TruncateReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static TruncateReply* default_instance_;
};
// -------------------------------------------------------------------

class MknodReq : public ::google::protobuf::Message {
 public:
  MknodReq();
  virtual ~MknodReq();

  MknodReq(const MknodReq& from);

  inline MknodReq& operator=(const MknodReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MknodReq& default_instance();

  void Swap(MknodReq* other);

  // implements Message ----------------------------------------------

  inline MknodReq* New() const { return New(NULL); }

  MknodReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MknodReq& from);
  void MergeFrom(const MknodReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MknodReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional int32 rdev = 3;
  void clear_rdev();
  static const int kRdevFieldNumber = 3;
  ::google::protobuf::int32 rdev() const;
  void set_rdev(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.MknodReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 rdev_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static MknodReq* default_instance_;
};
// -------------------------------------------------------------------

class MknodReply : public ::google::protobuf::Message {
 public:
  MknodReply();
  virtual ~MknodReply();

  MknodReply(const MknodReply& from);

  inline MknodReply& operator=(const MknodReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MknodReply& default_instance();

  void Swap(MknodReply* other);

  // implements Message ----------------------------------------------

  inline MknodReply* New() const { return New(NULL); }

  MknodReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MknodReply& from);
  void MergeFrom(const MknodReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MknodReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.MknodReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static MknodReply* default_instance_;
};
// -------------------------------------------------------------------

class FlushReq : public ::google::protobuf::Message {
 public:
  FlushReq();
  virtual ~FlushReq();

  FlushReq(const FlushReq& from);

  inline FlushReq& operator=(const FlushReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlushReq& default_instance();

  void Swap(FlushReq* other);

  // implements Message ----------------------------------------------

  inline FlushReq* New() const { return New(NULL); }

  FlushReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlushReq& from);
  void MergeFrom(const FlushReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FlushReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:tafs.FlushReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static FlushReq* default_instance_;
};
// -------------------------------------------------------------------

class FlushReply : public ::google::protobuf::Message {
 public:
  FlushReply();
  virtual ~FlushReply();

  FlushReply(const FlushReply& from);

  inline FlushReply& operator=(const FlushReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlushReply& default_instance();

  void Swap(FlushReply* other);

  // implements Message ----------------------------------------------

  inline FlushReply* New() const { return New(NULL); }

  FlushReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlushReply& from);
  void MergeFrom(const FlushReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FlushReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.FlushReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static FlushReply* default_instance_;
};
// -------------------------------------------------------------------

class AccessReq : public ::google::protobuf::Message {
 public:
  AccessReq();
  virtual ~AccessReq();

  AccessReq(const AccessReq& from);

  inline AccessReq& operator=(const AccessReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessReq& default_instance();

  void Swap(AccessReq* other);

  // implements Message ----------------------------------------------

  inline AccessReq* New() const { return New(NULL); }

  AccessReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccessReq& from);
  void MergeFrom(const AccessReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccessReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.AccessReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static AccessReq* default_instance_;
};
// -------------------------------------------------------------------

class AccessReply : public ::google::protobuf::Message {
 public:
  AccessReply();
  virtual ~AccessReply();

  AccessReply(const AccessReply& from);

  inline AccessReply& operator=(const AccessReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessReply& default_instance();

  void Swap(AccessReply* other);

  // implements Message ----------------------------------------------

  inline AccessReply* New() const { return New(NULL); }

  AccessReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccessReply& from);
  void MergeFrom(const AccessReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccessReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.AccessReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static AccessReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirReq : public ::google::protobuf::Message {
 public:
  ReadDirReq();
  virtual ~ReadDirReq();

  ReadDirReq(const ReadDirReq& from);

  inline ReadDirReq& operator=(const ReadDirReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirReq& default_instance();

  void Swap(ReadDirReq* other);

  // implements Message ----------------------------------------------

  inline ReadDirReq* New() const { return New(NULL); }

  ReadDirReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirReq& from);
  void MergeFrom(const ReadDirReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadDirReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:tafs.ReadDirReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadDirReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirReply : public ::google::protobuf::Message {
 public:
  ReadDirReply();
  virtual ~ReadDirReply();

  ReadDirReply(const ReadDirReply& from);

  inline ReadDirReply& operator=(const ReadDirReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirReply& default_instance();

  void Swap(ReadDirReply* other);

  // implements Message ----------------------------------------------

  inline ReadDirReply* New() const { return New(NULL); }

  ReadDirReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirReply& from);
  void MergeFrom(const ReadDirReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadDirReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:tafs.ReadDirReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadDirReply* default_instance_;
};
// -------------------------------------------------------------------

class MkDirReq : public ::google::protobuf::Message {
 public:
  MkDirReq();
  virtual ~MkDirReq();

  MkDirReq(const MkDirReq& from);

  inline MkDirReq& operator=(const MkDirReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirReq& default_instance();

  void Swap(MkDirReq* other);

  // implements Message ----------------------------------------------

  inline MkDirReq* New() const { return New(NULL); }

  MkDirReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirReq& from);
  void MergeFrom(const MkDirReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkDirReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.MkDirReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static MkDirReq* default_instance_;
};
// -------------------------------------------------------------------

class MkDirReply : public ::google::protobuf::Message {
 public:
  MkDirReply();
  virtual ~MkDirReply();

  MkDirReply(const MkDirReply& from);

  inline MkDirReply& operator=(const MkDirReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirReply& default_instance();

  void Swap(MkDirReply* other);

  // implements Message ----------------------------------------------

  inline MkDirReply* New() const { return New(NULL); }

  MkDirReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirReply& from);
  void MergeFrom(const MkDirReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MkDirReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.MkDirReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static MkDirReply* default_instance_;
};
// -------------------------------------------------------------------

class RmDirReq : public ::google::protobuf::Message {
 public:
  RmDirReq();
  virtual ~RmDirReq();

  RmDirReq(const RmDirReq& from);

  inline RmDirReq& operator=(const RmDirReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirReq& default_instance();

  void Swap(RmDirReq* other);

  // implements Message ----------------------------------------------

  inline RmDirReq* New() const { return New(NULL); }

  RmDirReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirReq& from);
  void MergeFrom(const RmDirReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RmDirReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:tafs.RmDirReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static RmDirReq* default_instance_;
};
// -------------------------------------------------------------------

class RmDirReply : public ::google::protobuf::Message {
 public:
  RmDirReply();
  virtual ~RmDirReply();

  RmDirReply(const RmDirReply& from);

  inline RmDirReply& operator=(const RmDirReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirReply& default_instance();

  void Swap(RmDirReply* other);

  // implements Message ----------------------------------------------

  inline RmDirReply* New() const { return New(NULL); }

  RmDirReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirReply& from);
  void MergeFrom(const RmDirReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RmDirReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.RmDirReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static RmDirReply* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkReq : public ::google::protobuf::Message {
 public:
  UnlinkReq();
  virtual ~UnlinkReq();

  UnlinkReq(const UnlinkReq& from);

  inline UnlinkReq& operator=(const UnlinkReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkReq& default_instance();

  void Swap(UnlinkReq* other);

  // implements Message ----------------------------------------------

  inline UnlinkReq* New() const { return New(NULL); }

  UnlinkReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkReq& from);
  void MergeFrom(const UnlinkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnlinkReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:tafs.UnlinkReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static UnlinkReq* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkReply : public ::google::protobuf::Message {
 public:
  UnlinkReply();
  virtual ~UnlinkReply();

  UnlinkReply(const UnlinkReply& from);

  inline UnlinkReply& operator=(const UnlinkReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkReply& default_instance();

  void Swap(UnlinkReply* other);

  // implements Message ----------------------------------------------

  inline UnlinkReply* New() const { return New(NULL); }

  UnlinkReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkReply& from);
  void MergeFrom(const UnlinkReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnlinkReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.UnlinkReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static UnlinkReply* default_instance_;
};
// -------------------------------------------------------------------

class HelloRequest : public ::google::protobuf::Message {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloRequest& default_instance();

  void Swap(HelloRequest* other);

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const { return New(NULL); }

  HelloRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:tafs.HelloRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static HelloRequest* default_instance_;
};
// -------------------------------------------------------------------

class HelloReply : public ::google::protobuf::Message {
 public:
  HelloReply();
  virtual ~HelloReply();

  HelloReply(const HelloReply& from);

  inline HelloReply& operator=(const HelloReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloReply& default_instance();

  void Swap(HelloReply* other);

  // implements Message ----------------------------------------------

  inline HelloReply* New() const { return New(NULL); }

  HelloReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloReply& from);
  void MergeFrom(const HelloReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:tafs.HelloReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static HelloReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrReq : public ::google::protobuf::Message {
 public:
  GetAttrReq();
  virtual ~GetAttrReq();

  GetAttrReq(const GetAttrReq& from);

  inline GetAttrReq& operator=(const GetAttrReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrReq& default_instance();

  void Swap(GetAttrReq* other);

  // implements Message ----------------------------------------------

  inline GetAttrReq* New() const { return New(NULL); }

  GetAttrReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrReq& from);
  void MergeFrom(const GetAttrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAttrReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:tafs.GetAttrReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static GetAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrReply : public ::google::protobuf::Message {
 public:
  GetAttrReply();
  virtual ~GetAttrReply();

  GetAttrReply(const GetAttrReply& from);

  inline GetAttrReply& operator=(const GetAttrReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrReply& default_instance();

  void Swap(GetAttrReply* other);

  // implements Message ----------------------------------------------

  inline GetAttrReply* New() const { return New(NULL); }

  GetAttrReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrReply& from);
  void MergeFrom(const GetAttrReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAttrReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.GetAttrReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static GetAttrReply* default_instance_;
};
// -------------------------------------------------------------------

class OpenReq : public ::google::protobuf::Message {
 public:
  OpenReq();
  virtual ~OpenReq();

  OpenReq(const OpenReq& from);

  inline OpenReq& operator=(const OpenReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenReq& default_instance();

  void Swap(OpenReq* other);

  // implements Message ----------------------------------------------

  inline OpenReq* New() const { return New(NULL); }

  OpenReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenReq& from);
  void MergeFrom(const OpenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.OpenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 flag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static OpenReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenReply : public ::google::protobuf::Message {
 public:
  OpenReply();
  virtual ~OpenReply();

  OpenReply(const OpenReply& from);

  inline OpenReply& operator=(const OpenReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenReply& default_instance();

  void Swap(OpenReply* other);

  // implements Message ----------------------------------------------

  inline OpenReply* New() const { return New(NULL); }

  OpenReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenReply& from);
  void MergeFrom(const OpenReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  void clear_err();
  static const int kErrFieldNumber = 1;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.OpenReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static OpenReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadReq : public ::google::protobuf::Message {
 public:
  ReadReq();
  virtual ~ReadReq();

  ReadReq(const ReadReq& from);

  inline ReadReq& operator=(const ReadReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadReq& default_instance();

  void Swap(ReadReq* other);

  // implements Message ----------------------------------------------

  inline ReadReq* New() const { return New(NULL); }

  ReadReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadReq& from);
  void MergeFrom(const ReadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.ReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadReply : public ::google::protobuf::Message {
 public:
  ReadReply();
  virtual ~ReadReply();

  ReadReply(const ReadReply& from);

  inline ReadReply& operator=(const ReadReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadReply& default_instance();

  void Swap(ReadReply* other);

  // implements Message ----------------------------------------------

  inline ReadReply* New() const { return New(NULL); }

  ReadReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadReply& from);
  void MergeFrom(const ReadReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_bytes = 1;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 1;
  ::google::protobuf::int32 num_bytes() const;
  void set_num_bytes(::google::protobuf::int32 value);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:tafs.ReadReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 num_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadSReq : public ::google::protobuf::Message {
 public:
  ReadSReq();
  virtual ~ReadSReq();

  ReadSReq(const ReadSReq& from);

  inline ReadSReq& operator=(const ReadSReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSReq& default_instance();

  void Swap(ReadSReq* other);

  // implements Message ----------------------------------------------

  inline ReadSReq* New() const { return New(NULL); }

  ReadSReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadSReq& from);
  void MergeFrom(const ReadSReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadSReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.ReadSReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadSReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadSReply : public ::google::protobuf::Message {
 public:
  ReadSReply();
  virtual ~ReadSReply();

  ReadSReply(const ReadSReply& from);

  inline ReadSReply& operator=(const ReadSReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSReply& default_instance();

  void Swap(ReadSReply* other);

  // implements Message ----------------------------------------------

  inline ReadSReply* New() const { return New(NULL); }

  ReadSReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadSReply& from);
  void MergeFrom(const ReadSReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadSReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_bytes = 1;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 1;
  ::google::protobuf::int32 num_bytes() const;
  void set_num_bytes(::google::protobuf::int32 value);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:tafs.ReadSReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 num_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static ReadSReply* default_instance_;
};
// -------------------------------------------------------------------

class WriteReq : public ::google::protobuf::Message {
 public:
  WriteReq();
  virtual ~WriteReq();

  WriteReq(const WriteReq& from);

  inline WriteReq& operator=(const WriteReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteReq& default_instance();

  void Swap(WriteReq* other);

  // implements Message ----------------------------------------------

  inline WriteReq* New() const { return New(NULL); }

  WriteReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteReq& from);
  void MergeFrom(const WriteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.WriteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static WriteReq* default_instance_;
};
// -------------------------------------------------------------------

class WriteReply : public ::google::protobuf::Message {
 public:
  WriteReply();
  virtual ~WriteReply();

  WriteReply(const WriteReply& from);

  inline WriteReply& operator=(const WriteReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteReply& default_instance();

  void Swap(WriteReply* other);

  // implements Message ----------------------------------------------

  inline WriteReply* New() const { return New(NULL); }

  WriteReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteReply& from);
  void MergeFrom(const WriteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_bytes = 1;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 1;
  ::google::protobuf::int32 num_bytes() const;
  void set_num_bytes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.WriteReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 num_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static WriteReply* default_instance_;
};
// -------------------------------------------------------------------

class WriteSReq : public ::google::protobuf::Message {
 public:
  WriteSReq();
  virtual ~WriteSReq();

  WriteSReq(const WriteSReq& from);

  inline WriteSReq& operator=(const WriteSReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSReq& default_instance();

  void Swap(WriteSReq* other);

  // implements Message ----------------------------------------------

  inline WriteSReq* New() const { return New(NULL); }

  WriteSReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSReq& from);
  void MergeFrom(const WriteSReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteSReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bytes buf = 2;
  void clear_buf();
  static const int kBufFieldNumber = 2;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional int32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.WriteSReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static WriteSReq* default_instance_;
};
// -------------------------------------------------------------------

class WriteSReply : public ::google::protobuf::Message {
 public:
  WriteSReply();
  virtual ~WriteSReply();

  WriteSReply(const WriteSReply& from);

  inline WriteSReply& operator=(const WriteSReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSReply& default_instance();

  void Swap(WriteSReply* other);

  // implements Message ----------------------------------------------

  inline WriteSReply* New() const { return New(NULL); }

  WriteSReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSReply& from);
  void MergeFrom(const WriteSReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteSReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_bytes = 1;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 1;
  ::google::protobuf::int32 num_bytes() const;
  void set_num_bytes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tafs.WriteSReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 num_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tafs_2eproto();
  friend void protobuf_AssignDesc_tafs_2eproto();
  friend void protobuf_ShutdownFile_tafs_2eproto();

  void InitAsDefaultInstance();
  static WriteSReply* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameReq

// optional string oldpath = 1;
inline void RenameReq::clear_oldpath() {
  oldpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameReq::oldpath() const {
  // @@protoc_insertion_point(field_get:tafs.RenameReq.oldpath)
  return oldpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameReq::set_oldpath(const ::std::string& value) {
  
  oldpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.RenameReq.oldpath)
}
inline void RenameReq::set_oldpath(const char* value) {
  
  oldpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.RenameReq.oldpath)
}
inline void RenameReq::set_oldpath(const char* value, size_t size) {
  
  oldpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.RenameReq.oldpath)
}
inline ::std::string* RenameReq::mutable_oldpath() {
  
  // @@protoc_insertion_point(field_mutable:tafs.RenameReq.oldpath)
  return oldpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameReq::release_oldpath() {
  
  return oldpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameReq::set_allocated_oldpath(::std::string* oldpath) {
  if (oldpath != NULL) {
    
  } else {
    
  }
  oldpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldpath);
  // @@protoc_insertion_point(field_set_allocated:tafs.RenameReq.oldpath)
}

// optional string newpath = 2;
inline void RenameReq::clear_newpath() {
  newpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameReq::newpath() const {
  // @@protoc_insertion_point(field_get:tafs.RenameReq.newpath)
  return newpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameReq::set_newpath(const ::std::string& value) {
  
  newpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.RenameReq.newpath)
}
inline void RenameReq::set_newpath(const char* value) {
  
  newpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.RenameReq.newpath)
}
inline void RenameReq::set_newpath(const char* value, size_t size) {
  
  newpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.RenameReq.newpath)
}
inline ::std::string* RenameReq::mutable_newpath() {
  
  // @@protoc_insertion_point(field_mutable:tafs.RenameReq.newpath)
  return newpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameReq::release_newpath() {
  
  return newpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameReq::set_allocated_newpath(::std::string* newpath) {
  if (newpath != NULL) {
    
  } else {
    
  }
  newpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newpath);
  // @@protoc_insertion_point(field_set_allocated:tafs.RenameReq.newpath)
}

// -------------------------------------------------------------------

// RenameReply

// optional int32 err = 1;
inline void RenameReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 RenameReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.RenameReply.err)
  return err_;
}
inline void RenameReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.RenameReply.err)
}

// -------------------------------------------------------------------

// TruncateReq

// optional string path = 1;
inline void TruncateReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TruncateReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.TruncateReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TruncateReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.TruncateReq.path)
}
inline void TruncateReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.TruncateReq.path)
}
inline void TruncateReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.TruncateReq.path)
}
inline ::std::string* TruncateReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.TruncateReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TruncateReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TruncateReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.TruncateReq.path)
}

// optional int32 size = 2;
inline void TruncateReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 TruncateReq::size() const {
  // @@protoc_insertion_point(field_get:tafs.TruncateReq.size)
  return size_;
}
inline void TruncateReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tafs.TruncateReq.size)
}

// -------------------------------------------------------------------

// TruncateReply

// optional int32 err = 1;
inline void TruncateReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 TruncateReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.TruncateReply.err)
  return err_;
}
inline void TruncateReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.TruncateReply.err)
}

// -------------------------------------------------------------------

// MknodReq

// optional string path = 1;
inline void MknodReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MknodReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.MknodReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MknodReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.MknodReq.path)
}
inline void MknodReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.MknodReq.path)
}
inline void MknodReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.MknodReq.path)
}
inline ::std::string* MknodReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.MknodReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MknodReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MknodReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.MknodReq.path)
}

// optional int32 mode = 2;
inline void MknodReq::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MknodReq::mode() const {
  // @@protoc_insertion_point(field_get:tafs.MknodReq.mode)
  return mode_;
}
inline void MknodReq::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:tafs.MknodReq.mode)
}

// optional int32 rdev = 3;
inline void MknodReq::clear_rdev() {
  rdev_ = 0;
}
inline ::google::protobuf::int32 MknodReq::rdev() const {
  // @@protoc_insertion_point(field_get:tafs.MknodReq.rdev)
  return rdev_;
}
inline void MknodReq::set_rdev(::google::protobuf::int32 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:tafs.MknodReq.rdev)
}

// -------------------------------------------------------------------

// MknodReply

// optional int32 err = 1;
inline void MknodReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 MknodReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.MknodReply.err)
  return err_;
}
inline void MknodReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.MknodReply.err)
}

// -------------------------------------------------------------------

// FlushReq

// optional string path = 1;
inline void FlushReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlushReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.FlushReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.FlushReq.path)
}
inline void FlushReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.FlushReq.path)
}
inline void FlushReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.FlushReq.path)
}
inline ::std::string* FlushReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.FlushReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlushReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.FlushReq.path)
}

// -------------------------------------------------------------------

// FlushReply

// optional int32 err = 1;
inline void FlushReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 FlushReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.FlushReply.err)
  return err_;
}
inline void FlushReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.FlushReply.err)
}

// -------------------------------------------------------------------

// AccessReq

// optional string path = 1;
inline void AccessReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.AccessReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.AccessReq.path)
}
inline void AccessReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.AccessReq.path)
}
inline void AccessReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.AccessReq.path)
}
inline ::std::string* AccessReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.AccessReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.AccessReq.path)
}

// optional int32 mode = 2;
inline void AccessReq::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 AccessReq::mode() const {
  // @@protoc_insertion_point(field_get:tafs.AccessReq.mode)
  return mode_;
}
inline void AccessReq::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:tafs.AccessReq.mode)
}

// -------------------------------------------------------------------

// AccessReply

// optional int32 err = 1;
inline void AccessReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 AccessReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.AccessReply.err)
  return err_;
}
inline void AccessReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.AccessReply.err)
}

// -------------------------------------------------------------------

// ReadDirReq

// optional string path = 1;
inline void ReadDirReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.ReadDirReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadDirReq.path)
}
inline void ReadDirReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadDirReq.path)
}
inline void ReadDirReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadDirReq.path)
}
inline ::std::string* ReadDirReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadDirReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadDirReq.path)
}

// -------------------------------------------------------------------

// ReadDirReply

// optional int32 err = 1;
inline void ReadDirReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 ReadDirReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.ReadDirReply.err)
  return err_;
}
inline void ReadDirReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadDirReply.err)
}

// optional bytes buf = 2;
inline void ReadDirReply::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadDirReply::buf() const {
  // @@protoc_insertion_point(field_get:tafs.ReadDirReply.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirReply::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadDirReply.buf)
}
inline void ReadDirReply::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadDirReply.buf)
}
inline void ReadDirReply::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadDirReply.buf)
}
inline ::std::string* ReadDirReply::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadDirReply.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadDirReply::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadDirReply::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadDirReply.buf)
}

// -------------------------------------------------------------------

// MkDirReq

// optional string path = 1;
inline void MkDirReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MkDirReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.MkDirReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.MkDirReq.path)
}
inline void MkDirReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.MkDirReq.path)
}
inline void MkDirReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.MkDirReq.path)
}
inline ::std::string* MkDirReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.MkDirReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MkDirReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MkDirReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.MkDirReq.path)
}

// optional int32 mode = 2;
inline void MkDirReq::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 MkDirReq::mode() const {
  // @@protoc_insertion_point(field_get:tafs.MkDirReq.mode)
  return mode_;
}
inline void MkDirReq::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:tafs.MkDirReq.mode)
}

// -------------------------------------------------------------------

// MkDirReply

// optional int32 err = 1;
inline void MkDirReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 MkDirReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.MkDirReply.err)
  return err_;
}
inline void MkDirReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.MkDirReply.err)
}

// -------------------------------------------------------------------

// RmDirReq

// optional string path = 1;
inline void RmDirReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RmDirReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.RmDirReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.RmDirReq.path)
}
inline void RmDirReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.RmDirReq.path)
}
inline void RmDirReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.RmDirReq.path)
}
inline ::std::string* RmDirReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.RmDirReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RmDirReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RmDirReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.RmDirReq.path)
}

// -------------------------------------------------------------------

// RmDirReply

// optional int32 err = 1;
inline void RmDirReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 RmDirReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.RmDirReply.err)
  return err_;
}
inline void RmDirReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.RmDirReply.err)
}

// -------------------------------------------------------------------

// UnlinkReq

// optional string path = 1;
inline void UnlinkReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlinkReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.UnlinkReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.UnlinkReq.path)
}
inline void UnlinkReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.UnlinkReq.path)
}
inline void UnlinkReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.UnlinkReq.path)
}
inline ::std::string* UnlinkReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.UnlinkReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlinkReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.UnlinkReq.path)
}

// -------------------------------------------------------------------

// UnlinkReply

// optional int32 err = 1;
inline void UnlinkReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 UnlinkReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.UnlinkReply.err)
  return err_;
}
inline void UnlinkReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.UnlinkReply.err)
}

// -------------------------------------------------------------------

// HelloRequest

// optional string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:tafs.HelloRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.HelloRequest.name)
}
inline ::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tafs.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloRequest::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tafs.HelloRequest.name)
}

// -------------------------------------------------------------------

// HelloReply

// optional string message = 1;
inline void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:tafs.HelloReply.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.HelloReply.message)
}
inline void HelloReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.HelloReply.message)
}
inline void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.HelloReply.message)
}
inline ::std::string* HelloReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:tafs.HelloReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloReply::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:tafs.HelloReply.message)
}

// -------------------------------------------------------------------

// GetAttrReq

// optional string path = 1;
inline void GetAttrReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.GetAttrReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.GetAttrReq.path)
}
inline void GetAttrReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.GetAttrReq.path)
}
inline void GetAttrReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.GetAttrReq.path)
}
inline ::std::string* GetAttrReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.GetAttrReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.GetAttrReq.path)
}

// optional bytes buf = 2;
inline void GetAttrReq::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrReq::buf() const {
  // @@protoc_insertion_point(field_get:tafs.GetAttrReq.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReq::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.GetAttrReq.buf)
}
inline void GetAttrReq::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.GetAttrReq.buf)
}
inline void GetAttrReq::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.GetAttrReq.buf)
}
inline ::std::string* GetAttrReq::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.GetAttrReq.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrReq::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReq::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.GetAttrReq.buf)
}

// -------------------------------------------------------------------

// GetAttrReply

// optional bytes buf = 2;
inline void GetAttrReply::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttrReply::buf() const {
  // @@protoc_insertion_point(field_get:tafs.GetAttrReply.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReply::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.GetAttrReply.buf)
}
inline void GetAttrReply::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.GetAttrReply.buf)
}
inline void GetAttrReply::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.GetAttrReply.buf)
}
inline ::std::string* GetAttrReply::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.GetAttrReply.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttrReply::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttrReply::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.GetAttrReply.buf)
}

// optional int32 err = 1;
inline void GetAttrReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 GetAttrReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.GetAttrReply.err)
  return err_;
}
inline void GetAttrReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.GetAttrReply.err)
}

// -------------------------------------------------------------------

// OpenReq

// optional string path = 1;
inline void OpenReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.OpenReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.OpenReq.path)
}
inline void OpenReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.OpenReq.path)
}
inline void OpenReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.OpenReq.path)
}
inline ::std::string* OpenReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.OpenReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.OpenReq.path)
}

// optional int32 flag = 2;
inline void OpenReq::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 OpenReq::flag() const {
  // @@protoc_insertion_point(field_get:tafs.OpenReq.flag)
  return flag_;
}
inline void OpenReq::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:tafs.OpenReq.flag)
}

// -------------------------------------------------------------------

// OpenReply

// optional int32 err = 1;
inline void OpenReply::clear_err() {
  err_ = 0;
}
inline ::google::protobuf::int32 OpenReply::err() const {
  // @@protoc_insertion_point(field_get:tafs.OpenReply.err)
  return err_;
}
inline void OpenReply::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:tafs.OpenReply.err)
}

// -------------------------------------------------------------------

// ReadReq

// optional string path = 1;
inline void ReadReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.ReadReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadReq.path)
}
inline void ReadReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadReq.path)
}
inline void ReadReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadReq.path)
}
inline ::std::string* ReadReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadReq.path)
}

// optional int32 size = 2;
inline void ReadReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 ReadReq::size() const {
  // @@protoc_insertion_point(field_get:tafs.ReadReq.size)
  return size_;
}
inline void ReadReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadReq.size)
}

// optional int32 offset = 3;
inline void ReadReq::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 ReadReq::offset() const {
  // @@protoc_insertion_point(field_get:tafs.ReadReq.offset)
  return offset_;
}
inline void ReadReq::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadReq.offset)
}

// -------------------------------------------------------------------

// ReadReply

// optional int32 num_bytes = 1;
inline void ReadReply::clear_num_bytes() {
  num_bytes_ = 0;
}
inline ::google::protobuf::int32 ReadReply::num_bytes() const {
  // @@protoc_insertion_point(field_get:tafs.ReadReply.num_bytes)
  return num_bytes_;
}
inline void ReadReply::set_num_bytes(::google::protobuf::int32 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadReply.num_bytes)
}

// optional bytes buf = 2;
inline void ReadReply::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadReply::buf() const {
  // @@protoc_insertion_point(field_get:tafs.ReadReply.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReply::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadReply.buf)
}
inline void ReadReply::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadReply.buf)
}
inline void ReadReply::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadReply.buf)
}
inline ::std::string* ReadReply::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadReply.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadReply::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReply::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadReply.buf)
}

// -------------------------------------------------------------------

// ReadSReq

// optional string path = 1;
inline void ReadSReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadSReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.ReadSReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadSReq.path)
}
inline void ReadSReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadSReq.path)
}
inline void ReadSReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadSReq.path)
}
inline ::std::string* ReadSReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadSReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadSReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadSReq.path)
}

// optional int32 size = 2;
inline void ReadSReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 ReadSReq::size() const {
  // @@protoc_insertion_point(field_get:tafs.ReadSReq.size)
  return size_;
}
inline void ReadSReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadSReq.size)
}

// optional int32 offset = 3;
inline void ReadSReq::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 ReadSReq::offset() const {
  // @@protoc_insertion_point(field_get:tafs.ReadSReq.offset)
  return offset_;
}
inline void ReadSReq::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadSReq.offset)
}

// -------------------------------------------------------------------

// ReadSReply

// optional int32 num_bytes = 1;
inline void ReadSReply::clear_num_bytes() {
  num_bytes_ = 0;
}
inline ::google::protobuf::int32 ReadSReply::num_bytes() const {
  // @@protoc_insertion_point(field_get:tafs.ReadSReply.num_bytes)
  return num_bytes_;
}
inline void ReadSReply::set_num_bytes(::google::protobuf::int32 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:tafs.ReadSReply.num_bytes)
}

// optional bytes buf = 2;
inline void ReadSReply::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadSReply::buf() const {
  // @@protoc_insertion_point(field_get:tafs.ReadSReply.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSReply::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.ReadSReply.buf)
}
inline void ReadSReply::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.ReadSReply.buf)
}
inline void ReadSReply::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.ReadSReply.buf)
}
inline ::std::string* ReadSReply::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.ReadSReply.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadSReply::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSReply::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.ReadSReply.buf)
}

// -------------------------------------------------------------------

// WriteReq

// optional string path = 1;
inline void WriteReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.WriteReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.WriteReq.path)
}
inline void WriteReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.WriteReq.path)
}
inline void WriteReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.WriteReq.path)
}
inline ::std::string* WriteReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.WriteReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.WriteReq.path)
}

// optional bytes buf = 2;
inline void WriteReq::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteReq::buf() const {
  // @@protoc_insertion_point(field_get:tafs.WriteReq.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteReq::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.WriteReq.buf)
}
inline void WriteReq::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.WriteReq.buf)
}
inline void WriteReq::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.WriteReq.buf)
}
inline ::std::string* WriteReq::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.WriteReq.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteReq::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteReq::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.WriteReq.buf)
}

// optional int32 size = 3;
inline void WriteReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 WriteReq::size() const {
  // @@protoc_insertion_point(field_get:tafs.WriteReq.size)
  return size_;
}
inline void WriteReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteReq.size)
}

// optional int32 offset = 4;
inline void WriteReq::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 WriteReq::offset() const {
  // @@protoc_insertion_point(field_get:tafs.WriteReq.offset)
  return offset_;
}
inline void WriteReq::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteReq.offset)
}

// -------------------------------------------------------------------

// WriteReply

// optional int32 num_bytes = 1;
inline void WriteReply::clear_num_bytes() {
  num_bytes_ = 0;
}
inline ::google::protobuf::int32 WriteReply::num_bytes() const {
  // @@protoc_insertion_point(field_get:tafs.WriteReply.num_bytes)
  return num_bytes_;
}
inline void WriteReply::set_num_bytes(::google::protobuf::int32 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteReply.num_bytes)
}

// -------------------------------------------------------------------

// WriteSReq

// optional string path = 1;
inline void WriteSReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteSReq::path() const {
  // @@protoc_insertion_point(field_get:tafs.WriteSReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.WriteSReq.path)
}
inline void WriteSReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.WriteSReq.path)
}
inline void WriteSReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.WriteSReq.path)
}
inline ::std::string* WriteSReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tafs.WriteSReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteSReq::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tafs.WriteSReq.path)
}

// optional bytes buf = 2;
inline void WriteSReq::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteSReq::buf() const {
  // @@protoc_insertion_point(field_get:tafs.WriteSReq.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSReq::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tafs.WriteSReq.buf)
}
inline void WriteSReq::set_buf(const char* value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tafs.WriteSReq.buf)
}
inline void WriteSReq::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tafs.WriteSReq.buf)
}
inline ::std::string* WriteSReq::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:tafs.WriteSReq.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteSReq::release_buf() {
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSReq::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:tafs.WriteSReq.buf)
}

// optional int32 size = 3;
inline void WriteSReq::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 WriteSReq::size() const {
  // @@protoc_insertion_point(field_get:tafs.WriteSReq.size)
  return size_;
}
inline void WriteSReq::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteSReq.size)
}

// optional int32 offset = 4;
inline void WriteSReq::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 WriteSReq::offset() const {
  // @@protoc_insertion_point(field_get:tafs.WriteSReq.offset)
  return offset_;
}
inline void WriteSReq::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteSReq.offset)
}

// -------------------------------------------------------------------

// WriteSReply

// optional int32 num_bytes = 1;
inline void WriteSReply::clear_num_bytes() {
  num_bytes_ = 0;
}
inline ::google::protobuf::int32 WriteSReply::num_bytes() const {
  // @@protoc_insertion_point(field_get:tafs.WriteSReply.num_bytes)
  return num_bytes_;
}
inline void WriteSReply::set_num_bytes(::google::protobuf::int32 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:tafs.WriteSReply.num_bytes)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tafs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tafs_2eproto__INCLUDED
